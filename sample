import org.deeplearning4j.nn.conf.inputs.InputType;
import org.deeplearning4j.nn.conf.Updater;
import org.deeplearning4j.nn.conf.inputs.InputType;
import org.deeplearning4j.nn.graph.ComputationGraph;
import org.deeplearning4j.nn.transferlearning.FineTuneConfiguration;
import org.deeplearning4j.nn.transferlearning.TransferLearning;
import org.deeplearning4j.nn.conf.layers.OutputLayer;
import org.deeplearning4j.nn.weights.WeightInit;
import org.deeplearning4j.zoo.ZooModel;
import org.deeplearning4j.zoo.model.MobileNetV2;
import org.deeplearning4j.zoo.model.helper.MobileNetV2Helper;
import org.deeplearning4j.zoo.PretrainedType;
import org.nd4j.linalg.activations.Activation;
import org.nd4j.linalg.learning.config.Adam;
import org.nd4j.linalg.lossfunctions.LossFunctions;

public class MobileNetTransferLearning {
    public static ComputationGraph buildTransferModel(int numClasses) throws Exception {

        // === 1. Load pretrained MobileNetV2 ===
        ZooModel zooModel = MobileNetV2.builder().build();
        ComputationGraph pretrained = (ComputationGraph) zooModel.initPretrained(PretrainedType.IMAGENET);

        // === 2. Fine-tuning configuration ===
        FineTuneConfiguration fineTuneConf = new FineTuneConfiguration.Builder()
                .updater(new Adam(1e-4))
                .seed(123)
                .l2(1e-4)
                .build();

        // === 3. Transfer Learning 설정 (Logits 레이어 제거 및 새로운 출력 추가) ===
        ComputationGraph transferModel = new TransferLearning.GraphBuilder(pretrained)
                .fineTuneConfiguration(fineTuneConf)
                .setFeatureExtractor("global_pool") // global_pool 이전까지는 freeze
                .removeVertexAndConnections("Logits") // 출력 레이어 제거
                .addLayer("Logits", new OutputLayer.Builder(LossFunctions.LossFunction.NEGATIVELOGLIKELIHOOD)
                        .nIn(1280)
                        .nOut(numClasses)
                        .weightInit(WeightInit.XAVIER)
                        .activation(Activation.SOFTMAX)
                        .build(), "global_pool")
                .setOutputs("Logits")
                .build();

        return transferModel;
    }
}
